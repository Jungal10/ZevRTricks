manhattanVAAST <-
function(n.features, sig.level, vaast.simple, title, sig.line=TRUE, axis.text=TRUE, custom.xlab="index", sig.hjust=0, sig.vjust=0){

# READ IN THE DATA
dat<-read.table(vaast.simple, header=FALSE, skip=1, sep="\t", fill=TRUE)

# RID ZERO VALUE LINES

dat<-dat[dat$V4 > 0,]

# HEAVY FORMATTING DON'T DIG TOO DEEP OR YOUR BRAIN WILL FRY

# only care about first score
dat<-dat[,1:6]

# only care about lines with data found by chr grep
dat<-dat[grep(dat$V5, pattern="chr"),]

#parsing apart fifth column

pos.dat<-strsplit(as.character(dat$V5), split=":|;", perl=TRUE)

#returning values on index

dat$seqid<-sapply(pos.dat, FUN=function(xx){return(xx[[1]][1])})
dat$pos<-as.numeric(as.character(sapply(pos.dat, FUN=function(xx){return(xx[[2]][1])})))

dat<-dat[order(dat$seqid, dat$pos), ]
dat$index.vec<- cumsum(1:length(dat$pos))

dat$len.correction1<-unlist(tapply(dat$pos, INDEX=dat$seqid, FUN=function(x){c(max(x), rep(0, length(x)-1))}, simplify=TRUE))
dat$len.correction3<-unlist(tapply(dat$pos, INDEX=dat$seqid, FUN=function(x){rep(max(x), length(x))}, simplify=TRUE))
dat<-dat[order(-dat$len.correction3, dat$seqid, dat$pos), ]
dat$len.correction2<-cumsum(dat$len.correction1)
dat$relative.pos<-as.numeric(as.character(dat$len.correction2)) + as.numeric(as.character(dat$pos)) 

#recoding x axis data

axis.name<-unique(dat$seqid)
axis.name.pos.rel<-as.vector(tapply(dat$index, INDEX=dat$seqid, FUN=function(x){middle<-(max(x) + min(x))/2}))
axis.name.pos.real<-sort(as.vector(tapply(dat$relative.pos, INDEX=dat$seqid, FUN=function(x){middle<-(max(x) + min(x))/2})))


#call to the plot

maxy<- max(-log10(as.numeric(as.character(dat$V3)))) + 1

if(max(-log10(as.character(as.numeric(dat$V3)))  < -log10(sig.level/n.features)){maxy <- -log10(sig.level/n.features)+1}			

print(maxy)

plot(y=-log10(as.numeric(as.character(dat$V3))), x=dat$relative.pos, col=as.factor(dat$seqid), xaxt="n", xlab=custom.xlab, pch=20, ylab="-log10(p-value)", main=title, ylim=c(0,maxy))



if(sig.line == TRUE){ abline(h=-log10(sig.level/n.features), lty=2, lwd=3, col="grey")
 text(x=mean(axis.name.pos.real) + sig.hjust, y=0.5 + -log10(sig.level/n.features) + sig.vjust, "genome-wide sig. level", cex=1.0)}
 
 if(axis.text == TRUE){axis(1, at=axis.name.pos.real, labels=axis.name, las=2)}
 if(axis.text == FALSE){axis(1, at=axis.name.pos.real, labels=FALSE, las=2)}
 return(dat)
 
}
